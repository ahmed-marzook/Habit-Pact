buildscript {
	ext {
		// Plugin versions
		springBootVersion = '3.4.0'
		springDependencyManagementVersion = '1.1.6'
		spotlessVersion = '6.25.0'

		// Dependency versions
		springDocVersion = '2.7.0'
		mapstructVersion = '1.6.3'
		testcontainersVersion = '1.20.4'
		jjwt = '0.12.6'
		mockitoCore='5.15.2'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.kaizenflow'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	mockitoAgent
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security:'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
	implementation "io.jsonwebtoken:jjwt-api:${jjwt}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwt}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwt}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
	testImplementation "org.testcontainers:mongodb:${testcontainersVersion}"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation "org.mockito:mockito-core:${mockitoCore}"
	mockitoAgent("org.mockito:mockito-core:${mockitoCore}") {
		transitive = false
	}
}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
}

spotless {
	java {
		googleJavaFormat()
		removeUnusedImports()
		trimTrailingWhitespace()
		indentWithTabs(2)
		indentWithSpaces(4)
		endWithNewline()
		importOrder('java', 'javax', 'org', 'com', '')
	}

	groovyGradle {
		target '*.gradle'
		greclipse()
	}
}